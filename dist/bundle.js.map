{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;ACAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAqB;AAC7B,KAAK;AACL;;;;;;;;;;;;;;;;;AC5DkE;AAClB;AACzC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kEAAe;AACnC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAqB;AAC7B,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,8DAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,8DAAW;AAC/C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;;;AC7FgE;AAClC;AAC9B;AACA;AACA;AACO;AACP;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6EAAU;AAC9B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;;;;;UCxCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://dev-tools/./static/styles.css?dcb0","webpack://dev-tools/./script/components/option-component.ts","webpack://dev-tools/./script/components/render-game-component.ts","webpack://dev-tools/./script/main.ts","webpack://dev-tools/webpack/bootstrap","webpack://dev-tools/webpack/runtime/define property getters","webpack://dev-tools/webpack/runtime/hasOwnProperty shorthand","webpack://dev-tools/webpack/runtime/make namespace object","webpack://dev-tools/webpack/before-startup","webpack://dev-tools/webpack/startup","webpack://dev-tools/webpack/after-startup"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import { renderPageChangeLevel, } from '../main';\n// Перемешивает карты\nfunction shuffle(array) {\n    var _a;\n    var currentIndex = array.length, randomIndex;\n    while (currentIndex !== 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        _a = [\n            array[randomIndex],\n            array[currentIndex],\n        ], array[currentIndex] = _a[0], array[randomIndex] = _a[1];\n    }\n    return array;\n}\n// Создаем массив из карт\nexport var createCardArray = function (level) {\n    var cardArray = [];\n    for (var index = 1; index < 37; index++) {\n        cardArray.push(\"card-item\".concat(index.toString()));\n    }\n    shuffle(cardArray);\n    switch (level) {\n        case '1':\n            cardArray = cardArray.slice(0, 3);\n            break;\n        case '2':\n            cardArray = cardArray.slice(0, 6);\n            break;\n        case '3':\n            cardArray = cardArray.slice(0, 9);\n            break;\n        default:\n            break;\n    }\n    // удваиваю количество карт\n    cardArray = cardArray.concat(cardArray);\n    shuffle(cardArray);\n    return cardArray;\n};\n// Завершение игры\nexport function renderFinal(finalTime, gameStatus) {\n    var appEl = document.getElementById('app');\n    var minutes = Math.floor(finalTime / 60);\n    var remainingSeconds = finalTime % 60;\n    var timeString = \"\".concat(minutes\n        .toString()\n        .padStart(2, '0'), \":\").concat(remainingSeconds.toString().padStart(2, '0'));\n    var statusString = gameStatus === 'win' ? 'Вы  выиграли!' : 'Вы проиграли!';\n    var statusIcon = gameStatus === 'win'\n        ? '<img class=\"win-smille\">'\n        : '<img class=\"loose-smille\">';\n    var finalPageHtml = \"\\n            <div class=\\\"final-result\\\">\\n                <div class=\\\"final-result__status\\\">\".concat(statusIcon, \"</div>\\n                <div class=\\\"final-result__status-text\\\">\").concat(statusString, \"</div>\\n                <div class=\\\"final-result__time-text\\\">\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F:</div>\\n                <div class=\\\"final-result__time\\\">\").concat(timeString, \"</div>\\n                <button class=\\\"header-game-button\\\" id=\\\"startNewGameButtonEnd\\\">\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E</button>\\n            </div>\\n        \");\n    appEl.innerHTML = appEl.innerHTML + finalPageHtml;\n    var gamePage = document.getElementById('game-table');\n    gamePage.classList.add('game__transparent');\n    var startNewGameButton = document.getElementById('startNewGameButtonEnd');\n    startNewGameButton.addEventListener('click', function () {\n        renderPageChangeLevel();\n    });\n}\n","import { createCardArray, renderFinal } from './option-component';\nimport { renderPageChangeLevel } from '../main';\nexport function renderGame(level) {\n    var appEl = document.getElementById('app');\n    var firstCard = null;\n    var secondCard = null;\n    var clickable = true;\n    var finalTime = 0;\n    // Массив перемешанных карт\n    var cardArray = createCardArray(level);\n    var openedCardHtml = cardArray\n        .map(function (item, index) {\n        return \"<div class='card-item \".concat(item, \"' data-index=\").concat(index, \"></div>\");\n    })\n        .join('');\n    var appHtml = \"\\n    <div id='game-table'>\\n    <header class=\\\"header center\\\">\\n    <div class=\\\"header__timer-box\\\">\\n    <div class=\\\"header__name-box\\\">\\n    <p class=\\\"header__timer-name\\\">min </p>\\n    <p class=\\\"header__timer-name\\\">sek</p>\\n    </div>\\n          <p class=\\\"header__timer\\\" id=\\\"seconds\\\">00.00</p>\\n    </div>\\n          <button class=\\\"header-game-button\\\" id=\\\"startNewGameButton\\\">\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E</button>\\n          </header>\\n<section class=\\\"game-field\\\">\\n    \".concat(openedCardHtml, \"\\n</section>\\n</div>\\n    \");\n    appEl.innerHTML = appHtml;\n    // Таймер\n    var seconds = 0;\n    var timerEl = appEl.querySelector('#seconds');\n    var timerInterval;\n    // Обработчмк клика на кнопку \"Начать заново\"\n    var startNewGameButton = appEl.querySelector('#startNewGameButton');\n    startNewGameButton.addEventListener('click', function () {\n        renderPageChangeLevel();\n    });\n    setTimeout(function () {\n        var closedCardHtml = cardArray\n            .map(function (item, index) {\n            return \"<div class='card-item' data-index=\".concat(index, \"></div>\");\n        })\n            .join('');\n        // (appEl.querySelector('.game-field') as HTMLElement).innerHTML =\n        //     closedCardHtml\n        var gameFieldElement = appEl.querySelector('.game-field');\n        if (gameFieldElement) {\n            gameFieldElement.innerHTML = closedCardHtml;\n        }\n        timerInterval = setInterval(function () {\n            seconds++;\n            var minutes = Math.floor(seconds / 60);\n            var remainingSeconds = seconds % 60;\n            timerEl.textContent = \"\".concat(minutes\n                .toString()\n                .padStart(2, '0'), \":\").concat(remainingSeconds\n                .toString()\n                .padStart(2, '0'));\n        }, 1000);\n        var cards = appEl.querySelectorAll('.card-item');\n        cards.forEach(function (card) {\n            card.addEventListener('click', function () {\n                if (!clickable || card.classList.contains('inactive'))\n                    return;\n                var index = card.dataset.index;\n                if (index) {\n                    card.classList.add(cardArray[parseInt(index)]);\n                    if (!firstCard) {\n                        firstCard = card;\n                    }\n                    else {\n                        secondCard = card;\n                        clickable = false;\n                        setTimeout(function () {\n                            if (firstCard && secondCard) {\n                                if (firstCard.className === secondCard.className) {\n                                    alert('Вы победили!');\n                                    firstCard.classList.add('inactive');\n                                    secondCard.classList.add('inactive');\n                                    var inactiveCards = appEl.querySelectorAll('.card-item.inactive');\n                                    if (inactiveCards.length ===\n                                        cardArray.length) {\n                                        clearInterval(timerInterval);\n                                        finalTime = seconds;\n                                        renderFinal(finalTime, 'win');\n                                    }\n                                }\n                                else {\n                                    alert('Вы проиграли!');\n                                    firstCard.classList.remove(firstCard.classList[1]);\n                                    secondCard.classList.remove(secondCard.classList[1]);\n                                    finalTime = seconds;\n                                    renderFinal(finalTime, 'lose');\n                                }\n                                firstCard = null;\n                                secondCard = null;\n                                clickable = true;\n                            }\n                        }, 100);\n                    }\n                }\n            });\n        });\n    }, 5000);\n}\n","import { renderGame } from './components/render-game-component';\nimport '../static/styles.css';\nwindow.globalState = {\n    level: '',\n};\nexport var level;\n// рендер страницы с выбором уровня сложности\nexport var renderPageChangeLevel = function () {\n    var appEl = document.getElementById('app');\n    var appHtml = \"<div class=\\\"main\\\" id=\\\"main-box\\\">\\n    <h2 class=\\\"main__title\\\">\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C</h2>\\n    <div class=\\\"main__level-box\\\">\\n        <input\\n            type=\\\"radio\\\"\\n            name=\\\"games\\\"\\n            data-index=\\\"1\\\"\\n            id=\\\"level-light\\\"\\n            class=\\\"level-input\\\"\\n            value=\\\"1\\\"\\n        />\\n        <label for=\\\"level-light\\\">1</label>\\n\\n        <input\\n            type=\\\"radio\\\"\\n            name=\\\"games\\\"\\n            data-index=\\\"2\\\"\\n            id=\\\"level-medium\\\"\\n            class=\\\"level-input\\\"\\n            value=\\\"2\\\"\\n        />\\n        <label for=\\\"level-medium\\\">2</label>\\n\\n        <input\\n            type=\\\"radio\\\"\\n            name=\\\"games\\\"\\n            data-index=\\\"3\\\"\\n            id=\\\"level-hard\\\"\\n            class=\\\"level-input\\\"\\n            value=\\\"3\\\"\\n        />\\n        <label for=\\\"level-hard\\\">3</label>\\n    </div>\\n    <button id=\\\"start-button\\\" class=\\\"main__button\\\">\\u0421\\u0442\\u0430\\u0440\\u0442</button>\\n</div>\";\n    appEl.innerHTML = appHtml;\n    var levelEl = document.querySelectorAll('.level-input');\n    var startButtonEl = document.getElementById('start-button');\n    // Обработчик клика на  все инпуты выбора уровня\n    var inputEventListener = function () {\n        levelEl.forEach(function (input) {\n            input.addEventListener('click', function () {\n                window.globalState.level = input.dataset.index;\n                level = input.dataset.index;\n                console.log(level);\n            });\n        });\n    };\n    var StartButtonClickListener = function () {\n        var startButtonEl = document.getElementById('start-button');\n        if (startButtonEl) {\n            // Обработчик клика на кнопку старт\n            startButtonEl.addEventListener('click', function () {\n                if (window.globalState.level) {\n                    renderGame(window.globalState.level);\n                }\n                else {\n                    alert('Пожалуйста, выберите уровень сложности');\n                }\n            });\n        }\n    };\n    StartButtonClickListener();\n    inputEventListener();\n};\nrenderPageChangeLevel();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./script/main.ts\");\n",""],"names":[],"sourceRoot":""}